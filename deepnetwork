#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Feb  2 23:54:27 2018

@author: lucien
"""

import numpy as np 
import tensorflow as tf 
import keras
from keras.models import Sequential
from keras.layers.core import Dense, Activation, Flatten, Dropout


#%% Import data

#training data
data_train=np.loadtxt('training_data.txt', skiprows=1, delimiter=' ')
y_train0=data_train[:,0]
x_train0=np.delete(data_train,0,1)

#testing data (no y label data)
#x_test=np.loadtxt('test_data.txt', skiprows=1, delimiter=' ')



#%% Deep Network 


model = Sequential() #establish model
model.add(Dense(150,input_dim=1000)) #input layer
model.add(Activation('relu'))
model.add(Dropout(0.2))
model.add(Dense(50))
model.add(Activation('relu'))
model.add(Dropout(0.2))

model.add(Dense(10)) #output layer
model.add(Activation('softmax'))

model.summary()
model.compile(loss='categorical_crossentropy',optimizer='adam', metrics=['accuracy'])

fit = model.fit(X_train, y_train, batch_size=96, epochs=15,
    verbose=1)

## Printing the accuracy of our model, according to the loss function specified in model.compile above
score = model.evaluate(X_test, y_test, verbose=1)
print('Test score:', score[0])
print('Test accuracy:', score[1])
